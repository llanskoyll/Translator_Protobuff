/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: structurs.proto */

#ifndef PROTOBUF_C_structurs_2eproto__INCLUDED
#define PROTOBUF_C_structurs_2eproto__INCLUDED

#include "../src/protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _ConfigAhsmT ConfigAhsmT;


/* --- enums --- */


/* --- messages --- */

struct  _ConfigAhsmT
{
  ProtobufCMessage base;
  protobuf_c_boolean has_version;
  uint32_t version;
  char *name;
  protobuf_c_boolean has_token_type;
  uint32_t token_type;
  protobuf_c_boolean has_com_mode;
  uint32_t com_mode;
  protobuf_c_boolean has_com_boot;
  uint32_t com_boot;
  protobuf_c_boolean has_dumb_terminal;
  uint32_t dumb_terminal;
  protobuf_c_boolean has_force_optrom;
  uint32_t force_optrom;
  protobuf_c_boolean has_guest_login;
  uint32_t guest_login;
  protobuf_c_boolean has_fw_download;
  uint32_t fw_download;
};
#define CONFIG_AHSM_T__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&config_ahsm_t__descriptor) \
    , 0, 0, NULL, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }


/* ConfigAhsmT methods */
void   config_ahsm_t__init
                     (ConfigAhsmT         *message);
size_t config_ahsm_t__get_packed_size
                     (const ConfigAhsmT   *message);
size_t config_ahsm_t__pack
                     (const ConfigAhsmT   *message,
                      uint8_t             *out);
size_t config_ahsm_t__pack_to_buffer
                     (const ConfigAhsmT   *message,
                      ProtobufCBuffer     *buffer);
ConfigAhsmT *
       config_ahsm_t__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   config_ahsm_t__free_unpacked
                     (ConfigAhsmT *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*ConfigAhsmT_Closure)
                 (const ConfigAhsmT *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor config_ahsm_t__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_structurs_2eproto__INCLUDED */
